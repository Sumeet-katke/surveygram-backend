# Generated by Django 5.0.7 on 2024-08-05 21:43

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='questions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=1000)),
                ('options', models.CharField(max_length=50000)),
            ],
        ),
        migrations.CreateModel(
            name='rewards',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='role',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('role_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='typeOfQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000)),
                ('time', models.TimeField()),
                ('reward', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('userId', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('roleId', models.ForeignKey(default=3, on_delete=django.db.models.deletion.CASCADE, to='api.role')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=False)),
                ('url', models.CharField(max_length=400)),
                ('sector', models.CharField(max_length=100)),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='response',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('userResponse', models.CharField(max_length=500)),
                ('questionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.questions')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='survey',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('rewardQuantity', models.IntegerField()),
                ('startDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(default=datetime.datetime(2024, 8, 12, 21, 43, 38, 77612, tzinfo=datetime.timezone.utc))),
                ('ageFrom', models.IntegerField(default=18)),
                ('ageTo', models.IntegerField(default=35)),
                ('createdTime', models.DateTimeField(default=datetime.datetime(2024, 8, 5, 21, 43, 38, 77850, tzinfo=datetime.timezone.utc))),
                ('timeToFinish', models.TimeField()),
                ('isActive', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.rewards')),
                ('typeOf', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.typeofquestion')),
            ],
        ),
        migrations.AddField(
            model_name='questions',
            name='surveyId',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='api.survey'),
        ),
        migrations.CreateModel(
            name='surveyHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('companyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('surveyID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.survey')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
